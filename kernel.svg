<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>[test.test] (13 samples, 7.26%)</title><rect x="557.2" y="421" width="85.6" height="15.0" fill="rgb(209,119,46)" rx="2" ry="2" />
<text  x="560.15" y="431.5" >[test.test]</text>
</g>
<g >
<title>__fdget (1 samples, 0.56%)</title><rect x="1097.7" y="469" width="6.6" height="15.0" fill="rgb(207,41,50)" rx="2" ry="2" />
<text  x="1100.71" y="479.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (1 samples, 0.56%)</title><rect x="636.3" y="325" width="6.5" height="15.0" fill="rgb(218,229,16)" rx="2" ry="2" />
<text  x="639.26" y="335.5" ></text>
</g>
<g >
<title>[test.test] (12 samples, 6.70%)</title><rect x="557.2" y="373" width="79.1" height="15.0" fill="rgb(229,158,25)" rx="2" ry="2" />
<text  x="560.15" y="383.5" >[test.test]</text>
</g>
<g >
<title>__sys_accept4 (5 samples, 2.79%)</title><rect x="662.6" y="469" width="33.0" height="15.0" fill="rgb(220,168,8)" rx="2" ry="2" />
<text  x="665.63" y="479.5" >__..</text>
</g>
<g >
<title>[test.test] (33 samples, 18.44%)</title><rect x="425.3" y="517" width="217.5" height="15.0" fill="rgb(219,56,2)" rx="2" ry="2" />
<text  x="428.31" y="527.5" >[test.test]</text>
</g>
<g >
<title>[test.test] (7 samples, 3.91%)</title><rect x="590.1" y="213" width="46.2" height="15.0" fill="rgb(226,63,21)" rx="2" ry="2" />
<text  x="593.11" y="223.5" >[tes..</text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.56%)</title><rect x="715.4" y="357" width="6.6" height="15.0" fill="rgb(245,184,18)" rx="2" ry="2" />
<text  x="718.36" y="367.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.56%)</title><rect x="1183.4" y="453" width="6.6" height="15.0" fill="rgb(218,147,39)" rx="2" ry="2" />
<text  x="1186.41" y="463.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 1.12%)</title><rect x="1058.2" y="389" width="13.1" height="15.0" fill="rgb(235,8,31)" rx="2" ry="2" />
<text  x="1061.16" y="399.5" ></text>
</g>
<g >
<title>[test.test] (7 samples, 3.91%)</title><rect x="590.1" y="245" width="46.2" height="15.0" fill="rgb(231,116,43)" rx="2" ry="2" />
<text  x="593.11" y="255.5" >[tes..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.56%)</title><rect x="1183.4" y="613" width="6.6" height="15.0" fill="rgb(254,154,3)" rx="2" ry="2" />
<text  x="1186.41" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (34 samples, 18.99%)</title><rect x="932.9" y="501" width="224.1" height="15.0" fill="rgb(238,226,16)" rx="2" ry="2" />
<text  x="935.91" y="511.5" >__x64_sys_recvmsg</text>
</g>
<g >
<title>test.test (179 samples, 100.00%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(207,40,31)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >test.test</text>
</g>
<g >
<title>aa_sock_msg_perm (4 samples, 2.23%)</title><rect x="985.6" y="389" width="26.4" height="15.0" fill="rgb(223,109,32)" rx="2" ry="2" />
<text  x="988.64" y="399.5" >a..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.56%)</title><rect x="1183.4" y="373" width="6.6" height="15.0" fill="rgb(228,57,36)" rx="2" ry="2" />
<text  x="1186.41" y="383.5" ></text>
</g>
<g >
<title>fput_many (1 samples, 0.56%)</title><rect x="741.7" y="437" width="6.6" height="15.0" fill="rgb(227,135,7)" rx="2" ry="2" />
<text  x="744.73" y="447.5" ></text>
</g>
<g >
<title>do_signal (1 samples, 0.56%)</title><rect x="1183.4" y="565" width="6.6" height="15.0" fill="rgb(232,102,2)" rx="2" ry="2" />
<text  x="1186.41" y="575.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (11 samples, 6.15%)</title><rect x="1012.0" y="453" width="72.5" height="15.0" fill="rgb(243,199,24)" rx="2" ry="2" />
<text  x="1015.01" y="463.5" >copy_msg..</text>
</g>
<g >
<title>[test.test] (5 samples, 2.79%)</title><rect x="603.3" y="181" width="33.0" height="15.0" fill="rgb(233,171,9)" rx="2" ry="2" />
<text  x="606.30" y="191.5" >[t..</text>
</g>
<g >
<title>fput (1 samples, 0.56%)</title><rect x="741.7" y="453" width="6.6" height="15.0" fill="rgb(252,173,17)" rx="2" ry="2" />
<text  x="744.73" y="463.5" ></text>
</g>
<g >
<title>alloc_empty_file (1 samples, 0.56%)</title><rect x="636.3" y="293" width="6.5" height="15.0" fill="rgb(248,98,12)" rx="2" ry="2" />
<text  x="639.26" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.56%)</title><rect x="636.3" y="405" width="6.5" height="15.0" fill="rgb(253,170,8)" rx="2" ry="2" />
<text  x="639.26" y="415.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.56%)</title><rect x="722.0" y="405" width="6.5" height="15.0" fill="rgb(207,80,16)" rx="2" ry="2" />
<text  x="724.96" y="415.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.56%)</title><rect x="629.7" y="37" width="6.6" height="15.0" fill="rgb(229,13,29)" rx="2" ry="2" />
<text  x="632.66" y="47.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 1.12%)</title><rect x="1071.3" y="405" width="13.2" height="15.0" fill="rgb(251,177,51)" rx="2" ry="2" />
<text  x="1074.34" y="415.5" ></text>
</g>
<g >
<title>[test.test] (14 samples, 7.82%)</title><rect x="550.6" y="437" width="92.2" height="15.0" fill="rgb(226,128,8)" rx="2" ry="2" />
<text  x="553.56" y="447.5" >[test.test]</text>
</g>
<g >
<title>[test.test] (12 samples, 6.70%)</title><rect x="557.2" y="405" width="79.1" height="15.0" fill="rgb(236,214,9)" rx="2" ry="2" />
<text  x="560.15" y="415.5" >[test.test]</text>
</g>
<g >
<title>[test.test] (4 samples, 2.23%)</title><rect x="1157.0" y="549" width="26.4" height="15.0" fill="rgb(223,192,51)" rx="2" ry="2" />
<text  x="1160.04" y="559.5" >[..</text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.56%)</title><rect x="1183.4" y="469" width="6.6" height="15.0" fill="rgb(227,151,7)" rx="2" ry="2" />
<text  x="1186.41" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_accept4 (5 samples, 2.79%)</title><rect x="662.6" y="485" width="33.0" height="15.0" fill="rgb(210,198,47)" rx="2" ry="2" />
<text  x="665.63" y="495.5" >__..</text>
</g>
<g >
<title>__sys_accept4 (1 samples, 0.56%)</title><rect x="636.3" y="357" width="6.5" height="15.0" fill="rgb(250,69,37)" rx="2" ry="2" />
<text  x="639.26" y="367.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.56%)</title><rect x="748.3" y="453" width="6.6" height="15.0" fill="rgb(236,220,51)" rx="2" ry="2" />
<text  x="751.32" y="463.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.56%)</title><rect x="761.5" y="517" width="6.6" height="15.0" fill="rgb(252,183,34)" rx="2" ry="2" />
<text  x="764.51" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.56%)</title><rect x="754.9" y="517" width="6.6" height="15.0" fill="rgb(214,118,16)" rx="2" ry="2" />
<text  x="757.92" y="527.5" ></text>
</g>
<g >
<title>[test.test] (4 samples, 2.23%)</title><rect x="609.9" y="117" width="26.4" height="15.0" fill="rgb(216,217,3)" rx="2" ry="2" />
<text  x="612.89" y="127.5" >[..</text>
</g>
<g >
<title>___sys_recvmsg (25 samples, 13.97%)</title><rect x="932.9" y="469" width="164.8" height="15.0" fill="rgb(218,35,0)" rx="2" ry="2" />
<text  x="935.91" y="479.5" >___sys_recvmsg</text>
</g>
<g >
<title>[test.test] (14 samples, 7.82%)</title><rect x="550.6" y="469" width="92.2" height="15.0" fill="rgb(248,145,0)" rx="2" ry="2" />
<text  x="553.56" y="479.5" >[test.test]</text>
</g>
<g >
<title>[test.test] (17 samples, 9.50%)</title><rect x="530.8" y="485" width="112.0" height="15.0" fill="rgb(216,106,46)" rx="2" ry="2" />
<text  x="533.78" y="495.5" >[test.test]</text>
</g>
<g >
<title>[test.test] (59 samples, 32.96%)</title><rect x="366.0" y="533" width="388.9" height="15.0" fill="rgb(250,42,24)" rx="2" ry="2" />
<text  x="368.98" y="543.5" >[test.test]</text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.56%)</title><rect x="735.1" y="421" width="6.6" height="15.0" fill="rgb(206,54,40)" rx="2" ry="2" />
<text  x="738.14" y="431.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.56%)</title><rect x="1183.4" y="421" width="6.6" height="15.0" fill="rgb(207,94,32)" rx="2" ry="2" />
<text  x="1186.41" y="431.5" ></text>
</g>
<g >
<title>aa_sk_perm (3 samples, 1.68%)</title><rect x="992.2" y="373" width="19.8" height="15.0" fill="rgb(237,40,25)" rx="2" ry="2" />
<text  x="995.23" y="383.5" ></text>
</g>
<g >
<title>[test.test] (12 samples, 6.70%)</title><rect x="557.2" y="357" width="79.1" height="15.0" fill="rgb(251,81,33)" rx="2" ry="2" />
<text  x="560.15" y="367.5" >[test.test]</text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.56%)</title><rect x="722.0" y="373" width="6.5" height="15.0" fill="rgb(237,37,12)" rx="2" ry="2" />
<text  x="724.96" y="383.5" ></text>
</g>
<g >
<title>inet_accept (4 samples, 2.23%)</title><rect x="662.6" y="453" width="26.4" height="15.0" fill="rgb(247,16,5)" rx="2" ry="2" />
<text  x="665.63" y="463.5" >i..</text>
</g>
<g >
<title>__x64_sys_recvmsg (8 samples, 4.47%)</title><rect x="695.6" y="485" width="52.7" height="15.0" fill="rgb(219,161,6)" rx="2" ry="2" />
<text  x="698.59" y="495.5" >__x64..</text>
</g>
<g >
<title>[unknown] (4 samples, 2.23%)</title><rect x="1157.0" y="597" width="26.4" height="15.0" fill="rgb(207,208,16)" rx="2" ry="2" />
<text  x="1160.04" y="607.5" >[..</text>
</g>
<g >
<title>sockfd_lookup_light (3 samples, 1.68%)</title><rect x="1130.7" y="469" width="19.7" height="15.0" fill="rgb(233,77,53)" rx="2" ry="2" />
<text  x="1133.67" y="479.5" ></text>
</g>
<g >
<title>[test.test] (14 samples, 7.82%)</title><rect x="550.6" y="453" width="92.2" height="15.0" fill="rgb(215,191,41)" rx="2" ry="2" />
<text  x="553.56" y="463.5" >[test.test]</text>
</g>
<g >
<title>fput_many (4 samples, 2.23%)</title><rect x="1104.3" y="453" width="26.4" height="15.0" fill="rgb(232,72,38)" rx="2" ry="2" />
<text  x="1107.30" y="463.5" >f..</text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 1.68%)</title><rect x="1018.6" y="437" width="19.8" height="15.0" fill="rgb(219,179,45)" rx="2" ry="2" />
<text  x="1021.60" y="447.5" ></text>
</g>
<g >
<title>[test.test] (3 samples, 1.68%)</title><rect x="609.9" y="101" width="19.8" height="15.0" fill="rgb(231,114,40)" rx="2" ry="2" />
<text  x="612.89" y="111.5" ></text>
</g>
<g >
<title>[test.test] (5 samples, 2.79%)</title><rect x="603.3" y="197" width="33.0" height="15.0" fill="rgb(242,17,38)" rx="2" ry="2" />
<text  x="606.30" y="207.5" >[t..</text>
</g>
<g >
<title>sctp_skb_recv_datagram (1 samples, 0.56%)</title><rect x="972.5" y="389" width="6.6" height="15.0" fill="rgb(222,135,24)" rx="2" ry="2" />
<text  x="975.46" y="399.5" ></text>
</g>
<g >
<title>release_sock (4 samples, 2.23%)</title><rect x="946.1" y="389" width="26.4" height="15.0" fill="rgb(254,5,21)" rx="2" ry="2" />
<text  x="949.09" y="399.5" >r..</text>
</g>
<g >
<title>[test.test] (4 samples, 2.23%)</title><rect x="1157.0" y="565" width="26.4" height="15.0" fill="rgb(205,224,40)" rx="2" ry="2" />
<text  x="1160.04" y="575.5" >[..</text>
</g>
<g >
<title>__fdget (3 samples, 1.68%)</title><rect x="1130.7" y="453" width="19.7" height="15.0" fill="rgb(235,15,50)" rx="2" ry="2" />
<text  x="1133.67" y="463.5" ></text>
</g>
<g >
<title>[test.test] (4 samples, 2.23%)</title><rect x="609.9" y="165" width="26.4" height="15.0" fill="rgb(231,181,49)" rx="2" ry="2" />
<text  x="612.89" y="175.5" >[..</text>
</g>
<g >
<title>do_page_fault (1 samples, 0.56%)</title><rect x="629.7" y="85" width="6.6" height="15.0" fill="rgb(235,156,36)" rx="2" ry="2" />
<text  x="632.66" y="95.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 2.23%)</title><rect x="1157.0" y="613" width="26.4" height="15.0" fill="rgb(223,114,48)" rx="2" ry="2" />
<text  x="1160.04" y="623.5" >[..</text>
</g>
<g >
<title>apparmor_socket_recvmsg (4 samples, 2.23%)</title><rect x="985.6" y="405" width="26.4" height="15.0" fill="rgb(212,169,23)" rx="2" ry="2" />
<text  x="988.64" y="415.5" >a..</text>
</g>
<g >
<title>__sys_recvmsg (33 samples, 18.44%)</title><rect x="932.9" y="485" width="217.5" height="15.0" fill="rgb(220,147,17)" rx="2" ry="2" />
<text  x="935.91" y="495.5" >__sys_recvmsg</text>
</g>
<g >
<title>do_syscall_64 (59 samples, 32.96%)</title><rect x="768.1" y="517" width="388.9" height="15.0" fill="rgb(220,101,18)" rx="2" ry="2" />
<text  x="771.10" y="527.5" >do_syscall_64</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.56%)</title><rect x="689.0" y="437" width="6.6" height="15.0" fill="rgb(243,161,52)" rx="2" ry="2" />
<text  x="691.99" y="447.5" ></text>
</g>
<g >
<title>__sys_recvmsg (8 samples, 4.47%)</title><rect x="695.6" y="469" width="52.7" height="15.0" fill="rgb(211,110,37)" rx="2" ry="2" />
<text  x="698.59" y="479.5" >__sys..</text>
</g>
<g >
<title>__x64_sys_accept4 (1 samples, 0.56%)</title><rect x="636.3" y="373" width="6.5" height="15.0" fill="rgb(209,209,49)" rx="2" ry="2" />
<text  x="639.26" y="383.5" ></text>
</g>
<g >
<title>[test.test] (173 samples, 96.65%)</title><rect x="16.6" y="565" width="1140.4" height="15.0" fill="rgb(214,62,30)" rx="2" ry="2" />
<text  x="19.59" y="575.5" >[test.test]</text>
</g>
<g >
<title>sock_alloc_file (1 samples, 0.56%)</title><rect x="636.3" y="341" width="6.5" height="15.0" fill="rgb(219,95,33)" rx="2" ry="2" />
<text  x="639.26" y="351.5" ></text>
</g>
<g >
<title>____sys_recvmsg (12 samples, 6.70%)</title><rect x="932.9" y="453" width="79.1" height="15.0" fill="rgb(226,89,17)" rx="2" ry="2" />
<text  x="935.91" y="463.5" >____sys_r..</text>
</g>
<g >
<title>___sys_recvmsg (7 samples, 3.91%)</title><rect x="695.6" y="453" width="46.1" height="15.0" fill="rgb(236,121,42)" rx="2" ry="2" />
<text  x="698.59" y="463.5" >___s..</text>
</g>
<g >
<title>[test.test] (12 samples, 6.70%)</title><rect x="557.2" y="341" width="79.1" height="15.0" fill="rgb(213,101,31)" rx="2" ry="2" />
<text  x="560.15" y="351.5" >[test.test]</text>
</g>
<g >
<title>all (179 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(225,143,12)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.56%)</title><rect x="722.0" y="389" width="6.5" height="15.0" fill="rgb(253,219,26)" rx="2" ry="2" />
<text  x="724.96" y="399.5" ></text>
</g>
<g >
<title>[test.test] (174 samples, 97.21%)</title><rect x="10.0" y="613" width="1147.0" height="15.0" fill="rgb(226,207,24)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >[test.test]</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.56%)</title><rect x="629.7" y="69" width="6.6" height="15.0" fill="rgb(226,71,22)" rx="2" ry="2" />
<text  x="632.66" y="79.5" ></text>
</g>
<g >
<title>[test.test] (4 samples, 2.23%)</title><rect x="609.9" y="149" width="26.4" height="15.0" fill="rgb(209,54,2)" rx="2" ry="2" />
<text  x="612.89" y="159.5" >[..</text>
</g>
<g >
<title>security_socket_recvmsg (5 samples, 2.79%)</title><rect x="979.1" y="421" width="32.9" height="15.0" fill="rgb(254,170,30)" rx="2" ry="2" />
<text  x="982.05" y="431.5" >se..</text>
</g>
<g >
<title>[test.test] (12 samples, 6.70%)</title><rect x="557.2" y="325" width="79.1" height="15.0" fill="rgb(235,87,49)" rx="2" ry="2" />
<text  x="560.15" y="335.5" >[test.test]</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.56%)</title><rect x="636.3" y="389" width="6.5" height="15.0" fill="rgb(220,91,6)" rx="2" ry="2" />
<text  x="639.26" y="399.5" ></text>
</g>
<g >
<title>[test.test] (4 samples, 2.23%)</title><rect x="1157.0" y="581" width="26.4" height="15.0" fill="rgb(247,23,2)" rx="2" ry="2" />
<text  x="1160.04" y="591.5" >[..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.56%)</title><rect x="629.7" y="53" width="6.6" height="15.0" fill="rgb(234,116,2)" rx="2" ry="2" />
<text  x="632.66" y="63.5" ></text>
</g>
<g >
<title>__fget (2 samples, 1.12%)</title><rect x="1137.3" y="421" width="13.1" height="15.0" fill="rgb(205,40,24)" rx="2" ry="2" />
<text  x="1140.26" y="431.5" ></text>
</g>
<g >
<title>sctp_accept (4 samples, 2.23%)</title><rect x="662.6" y="437" width="26.4" height="15.0" fill="rgb(216,61,11)" rx="2" ry="2" />
<text  x="665.63" y="447.5" >s..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 9.50%)</title><rect x="642.8" y="517" width="112.1" height="15.0" fill="rgb(228,145,11)" rx="2" ry="2" />
<text  x="645.85" y="527.5" >entry_SYSCALL..</text>
</g>
<g >
<title>[test.test] (174 samples, 97.21%)</title><rect x="10.0" y="597" width="1147.0" height="15.0" fill="rgb(209,63,31)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >[test.test]</text>
</g>
<g >
<title>[test.test] (12 samples, 6.70%)</title><rect x="557.2" y="389" width="79.1" height="15.0" fill="rgb(226,60,19)" rx="2" ry="2" />
<text  x="560.15" y="399.5" >[test.test]</text>
</g>
<g >
<title>exit_mmap (1 samples, 0.56%)</title><rect x="1183.4" y="485" width="6.6" height="15.0" fill="rgb(223,134,26)" rx="2" ry="2" />
<text  x="1186.41" y="495.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.56%)</title><rect x="1183.4" y="501" width="6.6" height="15.0" fill="rgb(214,109,52)" rx="2" ry="2" />
<text  x="1186.41" y="511.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.56%)</title><rect x="715.4" y="405" width="6.6" height="15.0" fill="rgb(208,34,13)" rx="2" ry="2" />
<text  x="718.36" y="415.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.56%)</title><rect x="636.3" y="245" width="6.5" height="15.0" fill="rgb(253,30,50)" rx="2" ry="2" />
<text  x="639.26" y="255.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.56%)</title><rect x="1183.4" y="517" width="6.6" height="15.0" fill="rgb(225,7,28)" rx="2" ry="2" />
<text  x="1186.41" y="527.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.56%)</title><rect x="1183.4" y="437" width="6.6" height="15.0" fill="rgb(227,21,45)" rx="2" ry="2" />
<text  x="1186.41" y="447.5" ></text>
</g>
<g >
<title>inet_recvmsg (6 samples, 3.35%)</title><rect x="939.5" y="421" width="39.6" height="15.0" fill="rgb(250,37,50)" rx="2" ry="2" />
<text  x="942.50" y="431.5" >ine..</text>
</g>
<g >
<title>import_iovec (7 samples, 3.91%)</title><rect x="1038.4" y="437" width="46.1" height="15.0" fill="rgb(242,95,26)" rx="2" ry="2" />
<text  x="1041.38" y="447.5" >impo..</text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.56%)</title><rect x="1183.4" y="405" width="6.6" height="15.0" fill="rgb(211,15,0)" rx="2" ry="2" />
<text  x="1186.41" y="415.5" ></text>
</g>
<g >
<title>[test.test] (9 samples, 5.03%)</title><rect x="576.9" y="309" width="59.4" height="15.0" fill="rgb(225,158,2)" rx="2" ry="2" />
<text  x="579.93" y="319.5" >[test...</text>
</g>
<g >
<title>schedule_timeout (4 samples, 2.23%)</title><rect x="662.6" y="421" width="26.4" height="15.0" fill="rgb(254,38,27)" rx="2" ry="2" />
<text  x="665.63" y="431.5" >s..</text>
</g>
<g >
<title>__sched_text_start (3 samples, 1.68%)</title><rect x="669.2" y="389" width="19.8" height="15.0" fill="rgb(210,47,44)" rx="2" ry="2" />
<text  x="672.22" y="399.5" ></text>
</g>
<g >
<title>schedule (3 samples, 1.68%)</title><rect x="669.2" y="405" width="19.8" height="15.0" fill="rgb(240,14,14)" rx="2" ry="2" />
<text  x="672.22" y="415.5" ></text>
</g>
<g >
<title>[test.test] (24 samples, 13.41%)</title><rect x="484.6" y="501" width="158.2" height="15.0" fill="rgb(206,113,26)" rx="2" ry="2" />
<text  x="487.64" y="511.5" >[test.test]</text>
</g>
<g >
<title>sock_recvmsg (11 samples, 6.15%)</title><rect x="939.5" y="437" width="72.5" height="15.0" fill="rgb(241,67,19)" rx="2" ry="2" />
<text  x="942.50" y="447.5" >sock_rec..</text>
</g>
<g >
<title>page_fault (1 samples, 0.56%)</title><rect x="629.7" y="101" width="6.6" height="15.0" fill="rgb(220,107,9)" rx="2" ry="2" />
<text  x="632.66" y="111.5" ></text>
</g>
<g >
<title>[test.test] (4 samples, 2.23%)</title><rect x="1157.0" y="533" width="26.4" height="15.0" fill="rgb(239,100,29)" rx="2" ry="2" />
<text  x="1160.04" y="543.5" >[..</text>
</g>
<g >
<title>[test.test] (8 samples, 4.47%)</title><rect x="583.5" y="277" width="52.8" height="15.0" fill="rgb(213,129,13)" rx="2" ry="2" />
<text  x="586.52" y="287.5" >[test..</text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.56%)</title><rect x="748.3" y="405" width="6.6" height="15.0" fill="rgb(253,34,45)" rx="2" ry="2" />
<text  x="751.32" y="415.5" ></text>
</g>
<g >
<title>sctp_recvmsg (1 samples, 0.56%)</title><rect x="715.4" y="389" width="6.6" height="15.0" fill="rgb(208,204,33)" rx="2" ry="2" />
<text  x="718.36" y="399.5" ></text>
</g>
<g >
<title>____sys_recvmsg (5 samples, 2.79%)</title><rect x="695.6" y="437" width="32.9" height="15.0" fill="rgb(206,229,41)" rx="2" ry="2" />
<text  x="698.59" y="447.5" >__..</text>
</g>
<g >
<title>[test.test] (174 samples, 97.21%)</title><rect x="10.0" y="581" width="1147.0" height="15.0" fill="rgb(237,11,51)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >[test.test]</text>
</g>
<g >
<title>do_group_exit (1 samples, 0.56%)</title><rect x="1183.4" y="533" width="6.6" height="15.0" fill="rgb(212,30,19)" rx="2" ry="2" />
<text  x="1186.41" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 9.50%)</title><rect x="642.8" y="501" width="112.1" height="15.0" fill="rgb(221,217,37)" rx="2" ry="2" />
<text  x="645.85" y="511.5" >do_syscall_64</text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.56%)</title><rect x="636.3" y="261" width="6.5" height="15.0" fill="rgb(234,105,5)" rx="2" ry="2" />
<text  x="639.26" y="271.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (2 samples, 1.12%)</title><rect x="728.5" y="437" width="13.2" height="15.0" fill="rgb(238,124,20)" rx="2" ry="2" />
<text  x="731.55" y="447.5" ></text>
</g>
<g >
<title>fput (4 samples, 2.23%)</title><rect x="1104.3" y="469" width="26.4" height="15.0" fill="rgb(239,193,22)" rx="2" ry="2" />
<text  x="1107.30" y="479.5" >f..</text>
</g>
<g >
<title>[test.test] (8 samples, 4.47%)</title><rect x="583.5" y="293" width="52.8" height="15.0" fill="rgb(214,92,39)" rx="2" ry="2" />
<text  x="586.52" y="303.5" >[test..</text>
</g>
<g >
<title>task_work_run (1 samples, 0.56%)</title><rect x="748.3" y="469" width="6.6" height="15.0" fill="rgb(216,58,22)" rx="2" ry="2" />
<text  x="751.32" y="479.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.56%)</title><rect x="1183.4" y="549" width="6.6" height="15.0" fill="rgb(209,103,49)" rx="2" ry="2" />
<text  x="1186.41" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (61 samples, 34.08%)</title><rect x="754.9" y="533" width="402.1" height="15.0" fill="rgb(244,139,41)" rx="2" ry="2" />
<text  x="757.92" y="543.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>sock_recvmsg (3 samples, 1.68%)</title><rect x="708.8" y="421" width="19.7" height="15.0" fill="rgb(210,0,31)" rx="2" ry="2" />
<text  x="711.77" y="431.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.56%)</title><rect x="715.4" y="373" width="6.6" height="15.0" fill="rgb(253,11,6)" rx="2" ry="2" />
<text  x="718.36" y="383.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 1.12%)</title><rect x="1058.2" y="405" width="13.1" height="15.0" fill="rgb(251,14,43)" rx="2" ry="2" />
<text  x="1061.16" y="415.5" ></text>
</g>
<g >
<title>security_file_free (1 samples, 0.56%)</title><rect x="748.3" y="421" width="6.6" height="15.0" fill="rgb(235,229,54)" rx="2" ry="2" />
<text  x="751.32" y="431.5" ></text>
</g>
<g >
<title>alloc_file (1 samples, 0.56%)</title><rect x="636.3" y="309" width="6.5" height="15.0" fill="rgb(249,123,46)" rx="2" ry="2" />
<text  x="639.26" y="319.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.56%)</title><rect x="748.3" y="437" width="6.6" height="15.0" fill="rgb(213,0,30)" rx="2" ry="2" />
<text  x="751.32" y="447.5" ></text>
</g>
<g >
<title>[test.test] (7 samples, 3.91%)</title><rect x="590.1" y="229" width="46.2" height="15.0" fill="rgb(206,11,38)" rx="2" ry="2" />
<text  x="593.11" y="239.5" >[tes..</text>
</g>
<g >
<title>__alloc_file (1 samples, 0.56%)</title><rect x="636.3" y="277" width="6.5" height="15.0" fill="rgb(252,120,21)" rx="2" ry="2" />
<text  x="639.26" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.56%)</title><rect x="1183.4" y="597" width="6.6" height="15.0" fill="rgb(248,33,54)" rx="2" ry="2" />
<text  x="1186.41" y="607.5" ></text>
</g>
<g >
<title>sock_recvmsg (2 samples, 1.12%)</title><rect x="1084.5" y="453" width="13.2" height="15.0" fill="rgb(254,17,22)" rx="2" ry="2" />
<text  x="1087.53" y="463.5" ></text>
</g>
<g >
<title>sctp_recvmsg (6 samples, 3.35%)</title><rect x="939.5" y="405" width="39.6" height="15.0" fill="rgb(218,76,1)" rx="2" ry="2" />
<text  x="942.50" y="415.5" >sct..</text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.56%)</title><rect x="1150.4" y="485" width="6.6" height="15.0" fill="rgb(218,112,16)" rx="2" ry="2" />
<text  x="1153.45" y="495.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.56%)</title><rect x="748.3" y="485" width="6.6" height="15.0" fill="rgb(248,55,32)" rx="2" ry="2" />
<text  x="751.32" y="495.5" ></text>
</g>
<g >
<title>[test.test] (1 samples, 0.56%)</title><rect x="623.1" y="85" width="6.6" height="15.0" fill="rgb(225,227,4)" rx="2" ry="2" />
<text  x="626.07" y="95.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 1.68%)</title><rect x="669.2" y="373" width="19.8" height="15.0" fill="rgb(211,56,7)" rx="2" ry="2" />
<text  x="672.22" y="383.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (6 samples, 3.35%)</title><rect x="1045.0" y="421" width="39.5" height="15.0" fill="rgb(219,160,49)" rx="2" ry="2" />
<text  x="1047.97" y="431.5" >rw_..</text>
</g>
<g >
<title>[test.test] (4 samples, 2.23%)</title><rect x="609.9" y="133" width="26.4" height="15.0" fill="rgb(209,125,23)" rx="2" ry="2" />
<text  x="612.89" y="143.5" >[..</text>
</g>
<g >
<title>put_unused_fd (1 samples, 0.56%)</title><rect x="689.0" y="453" width="6.6" height="15.0" fill="rgb(219,122,27)" rx="2" ry="2" />
<text  x="691.99" y="463.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.56%)</title><rect x="1183.4" y="389" width="6.6" height="15.0" fill="rgb(222,219,45)" rx="2" ry="2" />
<text  x="1186.41" y="399.5" ></text>
</g>
<g >
<title>[test.test] (8 samples, 4.47%)</title><rect x="583.5" y="261" width="52.8" height="15.0" fill="rgb(210,40,54)" rx="2" ry="2" />
<text  x="586.52" y="271.5" >[test..</text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.56%)</title><rect x="1183.4" y="581" width="6.6" height="15.0" fill="rgb(206,35,26)" rx="2" ry="2" />
<text  x="1186.41" y="591.5" ></text>
</g>
<g >
<title>[test.test] (173 samples, 96.65%)</title><rect x="16.6" y="549" width="1140.4" height="15.0" fill="rgb(241,70,7)" rx="2" ry="2" />
<text  x="19.59" y="559.5" >[test.test]</text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 1.68%)</title><rect x="952.7" y="373" width="19.8" height="15.0" fill="rgb(222,164,41)" rx="2" ry="2" />
<text  x="955.68" y="383.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.56%)</title><rect x="662.6" y="405" width="6.6" height="15.0" fill="rgb(225,118,48)" rx="2" ry="2" />
<text  x="665.63" y="415.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 1.68%)</title><rect x="1130.7" y="437" width="19.7" height="15.0" fill="rgb(245,28,11)" rx="2" ry="2" />
<text  x="1133.67" y="447.5" ></text>
</g>
</g>
</svg>
